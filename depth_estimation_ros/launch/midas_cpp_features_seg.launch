<launch>
    <arg name="input_topic" default="image_topic"/>
    <arg name="midas_topic" default="midas_topic"/>
    <arg name="output_topic" default="scaled_depth"/>
    <arg name="map_topic" default="map"/>
    <arg name="pose_topic" default="pose"/>
    <arg name="camera_info_in" default="camera_info_in"/>
    <arg name="camera_info_out" default="camera_out"/>
    <arg name="image_output_topic" default="image_out"/>
    <arg name="segmentation_topic" default="segmented"/>
    <arg name="image_input_original_topic" default="/zed2/zed_node/left/image_rect_color"/>
    <arg name="model_name" default="model-small-traced.pt"/>
    <arg name="out_orig_size" default="true"/>
    <arg name="net_width" default="256"/>
    <arg name="net_height" default="256"/>
    <arg name="logging" default="false"/>

    <node pkg="midas_cpp" type="midas_cpp" name="midas_cpp" output="log" respawn="true">
        <param name="input_topic" value="$(arg input_topic)"/>
        <param name="midas_topic" value="$(arg midas_topic)"/>
        <param name="model_name" value="$(arg model_name)"/>
        <param name="out_orig_size" value="$(arg out_orig_size)"/>
        <param name="net_width" value="$(arg net_width)"/>
        <param name="net_height" value="$(arg net_height)"/>
        <param name="logging" value="$(arg logging)"/>
    </node>
    
        <node pkg="nodelet" type="nodelet" args="manager" name="standalone_nodelet" output="screen"/>

    <!-- Convert to point cloud -->
    <node pkg="nodelet" type="nodelet" name="depth_image_proc" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet" output="screen">

        <!-- Input: Camera calibration and metadata.  (sensor_msgs/CameraInfo) -->
        <remap from="rgb/camera_info" to="$(arg camera_info_out)"/>

        <!-- Input:Rectified color image. (sensor_msgs/Image) -->
        <remap from="rgb/image_rect_color" to="$(arg image_output_topic)"/>

        <!-- Input: Rectified depth image, registered to the RGB camera. (sensor_msgs/Image) -->
        <remap from="depth_registered/image_rect" to="$(arg output_topic)"/>

        <!-- Output: XYZ point cloud. If using PCL, subscribe as PointCloud<PointXYZ>.  (sensor_msgs/PointCloud2)  -->
        <remap from="depth_registered/points" to="/point_cloud/points_dense"/>

    </node>
    

        <node pkg="midas_cpp" type="scale_features.py" name="scale_features" output="log" respawn="true">
        <param name="midas_topic" value="$(arg midas_topic)"/>
        <param name="map_topic" value="$(arg map_topic)"/>
        <param name="pose_topic" value="$(arg pose_topic)"/>
        <param name="output_topic" value="$(arg output_topic)"/>
        <param name="camera_info_in" value="$(arg camera_info_in)"/>
        <param name="camera_info_out" value="$(arg camera_info_out)"/>
        <param name="input_topic" value="$(arg input_topic)"/>
        <param name="image_output_topic" value="$(arg image_output_topic)"/>
    </node>

        <node pkg="midas_cpp" type="segmentation.py" name="segmentation" output="log" respawn="true">
        <param name="input_topic" value="$(arg input_topic)"/>
        <param name="image_input_original_topic" value="$(arg image_input_original_topic)"/>
        <param name="segmentation_topic" value="$(arg segmentation_topic)"/>
    </node>

    <node pkg="tf2_ros" type="static_transform_publisher" name="map_world"
          args="0. 0. 0.  0. 0.0 -0.0 map world" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="zed2_left_camera_optical_frame_zed2_left_camera_optical_frame2_broadcaster"
          args="0 0 0 0 0 0 1 zed2_base_link zed2_left_camera_optical_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="zed2_left_camera_optical_frame_Left_frame_broadcaster"
          args="0 0 0 0 0 0 1 zed2_left_camera_optical_frame Left_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="zed2_left_camera_optical_frame_zed2_camera_frame_broadcaster"
          args="0.01 0. 0.        0.5 -0.5 0.5 0.5       zed2_left_camera_optical_frame zed2_camera_frame"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="zed2_camera_frame_zed2_base_link_broadcaster"
          args="0. -0.06 0.        0. 0. 0. 1.       zed2_camera_frame zed2_camera_center"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="zed2_camera_center_zed2_base_link2_broadcaster"
          args="0. 0. -0.015        0. -0.0249969 0. 0.9996875       zed2_camera_center zed2_base_link2"/>
          
          
   <!--  <node pkg="tf2_ros" type="static_transform_publisher" name="world_frame_Left_frame_broadcaster" -->
      <!--   args="0 0 0 0 0 0 world Left_frame" /> -->

  
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find midas_cpp)/rviz/orb_slam3_depth_seg.rviz"/>
<!--     <node pkg="tf2_ros" type="static_transform_publisher" name="world_map_broadcaster" -->
<!--         args="0. 0. 0.        0. 0. 0. 1.       world map"/> -->
    
</launch>
