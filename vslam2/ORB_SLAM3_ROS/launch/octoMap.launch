<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.01" />

        <param name="frame_id" type="string" value="world" />

<!--        <remap from="cloud_in" to="/point_cloud/points_dense" />-->

        <remap from="cloud_in" to="/point_cloud/points_dense" />

        <param name="pointcloud_min_x" type="double" value="-100.0" />
        <param name="pointcloud_max_x" type="double" value="100.0" />

        <param name="pointcloud_min_y" type="double" value="-100.0" />
        <param name="pointcloud_max_y" type="double" value="20.0" />
        <param name="pointcloud_min_z" type="double" value="-20.0" />
        <param name="pointcloud_max_z" type="double" value="100.0" />
        <param name="occupancy_min_z" type="double" value="-20.0" />
        <param name="occupancy_max_z" type="double" value="20" />
        <param name="height_map" type="bool" value="true" />
        <param name="filter_ground" type="bool" value="false" />

        <param name="sensor_model/max_range" value="10.0" />
        <param name="sensor_model/hit" type="double" value="0.8" />
        <param name="sensor_model/miss" type="double" value="0.4" />
        <param name="sensor_model/min" type="double" value="0.12" />
        <param name="sensor_model/max" type="double" value="0.99" />
    </node>
</launch>